
const io = require('socket.io-client');
//var socket = io('https://namabilly-gomoku.herokuapp.com');
//var socket = io('http://localhost:3000');
var hostUrl = 'https://namabilly-gomoku.herokuapp.com';
var socket = io(hostUrl);

var SIZE = {x:15, y:15};

class Game {
	constructor(size){
		this.size = size;
		this.matrix = [];
		this.init();
		this.name;
		this.side;
		this.turn = 0;
		this.status = 0;
	}
	init(){
		for (let x=0;x<this.size.x;x++) {
			this.matrix[x] = [];
			for (let y=0;y<this.size.y;y++) {
				this.matrix[x][y] = 0;
			}
		}
	}
	load(matrix){
		this.init();
		for (let i in matrix) {
			var piece = matrix[i];
			this.matrix[piece.position.x][piece.position.y] = piece.turn%2*2-1;
		}
	}
	joinGame(name){
		this.name = name;
		socket.name = name;
		socket.emit('signUp', {name: this.name});
	}
	put(position){
		socket.emit('put', {
			position: {
				x: position.x,
				y: position.y
			}
		});
	}
}

socket.on('connect', () => {
	console.log('Is connected: ' + socket.connected);
});

socket.on('disconnect', () => {
	console.log('Disconnected.');
});

socket.on('signUpResponse', (data) => {
	if (data.success){
		console.log('Successfully signed up.');
		socket.emit('joinGame', {
			name: socket.name
		});
	}
	else {
		console.log(data.msg);
	}
});

socket.on('joinGameResponse', (data) => {
	if (data.success){
		console.log('Joined game 10' + data.id + '.');
	}
	else {
		console.log(data.msg);
	}
});

socket.on('updateBoard', (data) => {
	console.log('received.');
	game.load(data.pieces);
	var turn = data.pieces.length;
	game.turn = turn;
	game.side = ((turn%2===0||data.lock)&&(turn%2===1||!data.lock)) ? -1 : 1;
	game.status = data.status;
});

socket.on('err', (data) => {
	console.log(data.msg);
});

var game = new Game(SIZE);

module.exports = {
	game: game,
	socket: socket
}